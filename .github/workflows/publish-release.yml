name: Publish Release Candidates

on:
  push:
    branches:
      - develop
      - release-candidate
      - master
    paths-ignore:
      - 'package.json'
      - 'CHANGELOG.md'

jobs:
  version_bump:
    name: "Bump version"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - name: Bump version and push tag
      uses: TriPSs/conventional-changelog-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        git-message: 'chore(release): {version}'
        preset: 'angular'
        tag-prefix: ''
        output-file: 'CHANGELOG.md'

  deploy_android:
    runs-on: ubuntu-latest
    needs: version_bump
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node_modules/
        uses: actions/cache@v1
        id: node_cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-

      - name: Install Node Dependencies
        if: steps.node_cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Setup kernel for react native, increase watchers for release versions.
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install bundler for ruby package management
        run: gem install bundler -v "$(grep -A 1 "BUNDLED WITH" ./Gemfile.lock | tail -n 1)"
        working-directory: ./android

      - name: Cache ruby gems
        uses: actions/cache@v1
        id: ruby_cache
        with:
          path: android/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/android/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Ruby Dependencies
        if: steps.ruby_cache.outputs.cache-hit != 'true'
        run: | 
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
        working-directory: ./android

      - name: Decode Android key store
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: |
          echo $SIGNING_KEY | base64 -di > keystore.jks && cp keystore.jks app/keystore.jks && mkdir $HOME/keystores && cp keystore.jks $HOME/keystores
        working-directory: ./android

      - name: Decode service account key
        env:
          GOOGLE_PLAY_STORE_SECRET: ${{ secrets.GOOGLE_PLAY_STORE_SECRET }}
        run: echo $GOOGLE_PLAY_STORE_SECRET | base64 -di > json_key.json && cp json_key.json app/json_key.json
        working-directory: ./android

      - name: Build android Beta artifact
        uses: maierj/fastlane-action@v1.4.0
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        with:
          lane: 'release'
          subdirectory: 'android'
          bundle-install-path: 'vendor/bundle'

      - name: Upload to Google Play beta track
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'play_store'
          subdirectory: 'android'
          bundle-install-path: 'vendor/bundle'

  deploy_ios:
    runs-on: macOS-latest
    needs: version_bump
    steps:
      - uses: actions/checkout@master

      - name: Set XCode Version
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Cache node_modules/
        uses: actions/cache@v1
        id: node_cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-

      - name: Install Node Dependencies
        if: steps.node_cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Install bundler for ruby package management
        run: gem install bundler -v "$(grep -A 1 "BUNDLED WITH" ./Gemfile.lock | tail -n 1)"
        working-directory: ./ios

      - name: Cache ruby gems
        uses: actions/cache@v1
        id: ruby_cache
        with:
          path: ios/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/ios/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Ruby Dependencies
        if: steps.ruby_cache.outputs.cache-hit != 'true'
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
        working-directory: ./ios

      - name: Install Cocoapods
        run: bundle exec pod install --repo-update
        working-directory: ./ios

      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-add - <<< "${{ secrets.MATCH_SSH_CERT }}"

      - name: Build ios Release artifact
        uses: maierj/fastlane-action@v1.4.0
        # The names of the keys for secrets are specific and meaningful to Match.
        # Match password is responsible for decrypting the secrets from the cert repo
        # Fastlane password is responsible for interacting with the App Store to validate certificates and profiles.
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_GIT_BASIC_AUTH: ${{ secrets.MATCH_GIT_BASIC_AUTH }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        with:
          lane: 'release'
          subdirectory: 'ios'
          bundle-install-path: 'vendor/bundle'

      - name: Deploy to testflight
        uses: maierj/fastlane-action@v1.4.0
        # The names of the keys for secrets are specific and meaningful to Match.
        # Match password is responsible for decrypting the secrets from the cert repo
        # Fastlane password is responsible for interacting with the App Store to validate certificates and profiles.
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_GIT_BASIC_AUTH: ${{ secrets.MATCH_GIT_BASIC_AUTH }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        with:
          lane: 'deploy'
          subdirectory: 'ios'
          bundle-install-path: 'vendor/bundle'